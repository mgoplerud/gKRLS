% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mfx_function.R
\name{legacy_marginal_effect}
\alias{legacy_marginal_effect}
\title{Marginal Effects by Derivative}
\usage{
legacy_marginal_effect(object, newdata, keep = NULL)
}
\arguments{
\item{object}{A fitted gKRLS model.}

\item{newdata}{A new data frame that used to calculate the marginal effect.}

\item{keep}{A character string indicating which variables to calculate marginal
effects. Default is NULL, which calculates marginal effects for all.}
}
\value{
The \code{legacy_marginal_effect} returns \code{ME_pointwise}, which is
the marginal effects for each observations, \code{ME_pointwise_var} is the variance
for each marginal effects, \code{AME_pointwise} provide the average marginal effects
for all variables or variables in the keep argument, and \code{AME_pointwise_var} returns
the variance for average marginal effects.
}
\description{
Find the (average) marginal effect and standard error by taking the
analytical derivative of the conditional expectation function. This method is
designed to provide comparability with `KRLS` but is limited in the scenarios
where it can be applied. Specifically, it can only compute effects with a
single kernel and where variables are not both in the kernel and outside the
kernel.
}
\details{
Because of these restrictions, users should rely on `calculate_effects` and
this function may be removed in future updates. If a derivative is really
desired, this can be approximated as described in the `calculate_effects`
documentation.
}
\examples{
n <- 500
x1 <- rnorm(n)
x2 <- rnorm(n)
x3 <- rnorm(n)
state <- sample(letters, n, replace = TRUE)
y <- 0.3 * x1 + 0.4 * x2 + 0.5 * x3 + rnorm(n)
data <- data.frame(y, x1, x2, x3, state)

# A gKRLS model
gkrls_est <- mgcv::gam(y ~ s(x1, x2, x3, bs = "gKRLS"), data = data)
# calculate marginal effect using derivative
legacy_marginal_effect(gkrls_est, newdata = data)
}
